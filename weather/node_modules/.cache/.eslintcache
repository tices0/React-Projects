[{"/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/index.js":"1","/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/App.js":"2","/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/index.js":"3","/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/Sidebar.js":"4"},{"size":442,"mtime":1673737540521,"results":"5","hashOfConfig":"6"},{"size":812,"mtime":1673815081086,"results":"7","hashOfConfig":"6"},{"size":6608,"mtime":1676311624999,"results":"8","hashOfConfig":"9"},{"size":7054,"mtime":1676300600993,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fogi54",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"1ovq8xw",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/index.js",[],[],"/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/App.js",[],[],"/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/index.js",["24","25"],[],"import React, { useState, useEffect, createRef } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport \"./styles/style.css\";\r\nimport Sidebar, { getLocation } from \"./Sidebar\";\r\n\r\nexport { getData, weathercode, setGeo };\r\n\r\nlet currentLon;\r\nlet currentLat;\r\n\r\n// console.log(window.innerWidth, \"window width\");\r\n\r\nfunction setGeo() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\r\n\t\t\t\tcurrentLon = position.coords.longitude;\r\n\t\t\t\tcurrentLat = position.coords.latitude;\r\n\t\t\t\treturn resolve([currentLon, currentLat]);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn reject([100, 100]);\r\n\t\t}\r\n\t});\r\n}\r\n\r\nasync function getCountryCode(lon, lat) {\r\n\tconst res = await fetch(\r\n\t\t`https://nominatim.openstreetmap.org/reverse?format=geojson&lat=${lat}&lon=${lon}`,\r\n\t);\r\n\tconst data = await res.json();\r\n\treturn data.features[0].properties.address.country_code;\r\n}\r\n\r\nconst getData = async (lon, lat, unit) => {\r\n\tconst timezone = await getTimezone(lon, lat);\r\n\t// let res;\r\n\t// if (!unit) {\r\n\tconst res = await fetch(\r\n\t\t`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=relativehumidity_2m,surface_pressure,visibility,windspeed_10m,winddirection_10m&daily=weathercode,temperature_2m_max,temperature_2m_min&current_weather=true&windspeed_unit=mph&timezone=${timezone}`,\r\n\t);\r\n\t// } else {\r\n\t// const res = await fetch(\r\n\t// \t`https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lon}&hourly=relativehumidity_2m,surface_pressure,visibility,windspeed_10m,winddirection_10m&daily=weathercode,temperature_2m_max,temperature_2m_min&current_weather=true&windspeed_unit=mph&timezone=${timezone}&temperature_unit=fahrenheit`,\r\n\t// );\r\n\t// }\r\n\tconst data = await res.json();\r\n\treturn data;\r\n};\r\n\r\nasync function getTimezone(lon, lat) {\r\n\tconst code = await getCountryCode(lon, lat);\r\n\tconst ct = require(\"countries-and-timezones\");\r\n\tconst country = ct.getCountry(code.toUpperCase());\r\n\treturn country.timezones[0];\r\n}\r\n\r\nfunction weathercode(data, multiple, index) {\r\n\tlet code;\r\n\tif (multiple) {\r\n\t\tcode = data.daily.weathercode[index];\r\n\t} else {\r\n\t\tcode = data.current_weather.weathercode;\r\n\t}\r\n\tlet img;\r\n\tif (code === 0) {\r\n\t\timg = \"Clear\";\r\n\t} else if (code < 3) {\r\n\t\timg = \"LightCloud\";\r\n\t} else if (code === 3 || code === 45 || code === 48) {\r\n\t\timg = \"HeavyCloud\";\r\n\t} else if ((code > 50 && code < 56) || code === 61) {\r\n\t\timg = \"LightRain\";\r\n\t} else if (\r\n\t\tcode === 56 ||\r\n\t\tcode === 57 ||\r\n\t\tcode === 66 ||\r\n\t\tcode === 67 ||\r\n\t\tcode === 85 ||\r\n\t\tcode === 86\r\n\t) {\r\n\t\timg = \"Sleet\";\r\n\t} else if (code === 63 || code === 65) {\r\n\t\timg = \"HeavyRain\";\r\n\t} else if (code > 70 && code < 76) {\r\n\t\timg = \"Snow\";\r\n\t} else if (code === 77) {\r\n\t\timg = \"Hail\";\r\n\t} else if (code > 79 && code < 84) {\r\n\t\timg = \"Showers\";\r\n\t} else if (code === 95 || code === 96 || code === 99) {\r\n\t\timg = \"Thunderstorm\";\r\n\t} else {\r\n\t\treturn console.error(\"Invalid Weather Code\");\r\n\t}\r\n\treturn img;\r\n}\r\n\r\nfunction RenderSidebar() {\r\n\treturn (\r\n\t\t<section className=\"sidebar\">\r\n\t\t\t<Sidebar />\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nconst sidebar = createRoot(document.querySelector(\"#sidebar\"));\r\nsidebar.render(<RenderSidebar />);\r\n\r\nfunction Main() {\r\n\tconst [loaded, setLoaded] = useState(false);\r\n\tconst [dates, setDates] = useState([]);\r\n\tconst [imgs, setImgs] = useState([]);\r\n\tconst [minTemps, setMinTemps] = useState([]);\r\n\tconst [maxTemps, setMaxTemps] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function setCurrent() {\r\n\t\t\tlet both = await getLocation();\r\n\t\t\tconsole.log(both, \"both values\");\r\n\t\t\tlet lon = both[0];\r\n\t\t\tlet lat = both[1];\r\n\t\t\tconst data = await getData(lon, lat);\r\n\t\t\treturn setUp(data);\r\n\t\t}\r\n\r\n\t\tasync function setUp(data) {\r\n\t\t\tlet dateList = data.daily.time;\r\n\t\t\tdateList = dateList.map(value =>\r\n\t\t\t\tnew Date(value).toString(\"ddd, d MMM\"),\r\n\t\t\t);\r\n\t\t\tsetDates(dateList);\r\n\r\n\t\t\tlet mins = data.daily.temperature_2m_min;\r\n\t\t\tmins = mins.map(value => Math.round(value));\r\n\t\t\tsetMinTemps(mins);\r\n\r\n\t\t\tlet maxes = data.daily.temperature_2m_max;\r\n\t\t\tmaxes = maxes.map(value => Math.round(value));\r\n\t\t\tsetMaxTemps(maxes);\r\n\r\n\t\t\tfor (let i = 0; i < 6; i++) {\r\n\t\t\t\tlet imgcode = weathercode(data, true, i);\r\n\t\t\t\tconsole.log(imgcode, i);\r\n\t\t\t\tif (imgcode) {\r\n\t\t\t\t\tsetImgs(old => [...old, imgcode]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetImgs([...imgs, \"Clear\"]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconsole.log(imgs);\r\n\t\t\tsetLoaded(true);\r\n\t\t}\r\n\r\n\t\tsetCurrent();\r\n\t}, [loaded]);\r\n\r\n\tlet days = [];\r\n\tfor (let i = 0; i < 6; i++) {\r\n\t\tdays.push(i);\r\n\t}\r\n\r\n\tconst Days = () => {\r\n\t\tconst boxes = days.map((value, index) => (\r\n\t\t\t<li key={index} className=\"day\">\r\n\t\t\t\t<div className=\"date\">\r\n\t\t\t\t\t{loaded ? (\r\n\t\t\t\t\t\tvalue === 1 ? (\r\n\t\t\t\t\t\t\t<span>Tomorrow</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<span>{dates[value]}</span>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<img src={require(`./media/${imgs[value]}.png`)} alt=\"\" />\r\n\t\t\t\t<div className=\"temp\">\r\n\t\t\t\t\t<span className=\"max\">\r\n\t\t\t\t\t\t{loaded ? maxTemps[value] : \"not loaded\"}\r\n\t\t\t\t\t\t{celcius ? <i> &#176;C</i> : <i> &#176;F</i>}\r\n\t\t\t\t\t</span>{\" \"}\r\n\t\t\t\t\t<span className=\"min\">\r\n\t\t\t\t\t\t{loaded ? minTemps[value] : \"not loaded\"}\r\n\t\t\t\t\t\t{celcius ? <i> &#176;C</i> : <i> &#176;F</i>}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t));\r\n\t\tboxes.shift();\r\n\t\treturn boxes;\r\n\t};\r\n\r\n\tconst [celcius, setCelcius] = useState(true);\r\n\tconst c_button = createRef();\r\n\tconst f_button = createRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tc_button.current.style.fontWeight = \"bold\";\r\n\t\tf_button.current.style.fontWeight = \"bold\";\r\n\t\tif (celcius) {\r\n\t\t\tc_button.current.style.backgroundColor = \"#E7E7EB\";\r\n\t\t\tc_button.current.style.color = \"#110E3C\";\r\n\t\t\tf_button.current.style.backgroundColor = \"#585676\";\r\n\t\t\tf_button.current.style.color = \"#E7E7EB\";\r\n\t\t} else {\r\n\t\t\tf_button.current.style.backgroundColor = \"#E7E7EB\";\r\n\t\t\tf_button.current.style.color = \"#110E3C\";\r\n\t\t\tc_button.current.style.backgroundColor = \"#585676\";\r\n\t\t\tc_button.current.style.color = \"#E7E7EB\";\r\n\t\t}\r\n\t}, [celcius, c_button, f_button]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"btns\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"c\"\r\n\t\t\t\t\tref={c_button}\r\n\t\t\t\t\tonClick={() => setCelcius(true)}\r\n\t\t\t\t>\r\n\t\t\t\t\t&#176;C\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"f\"\r\n\t\t\t\t\tref={f_button}\r\n\t\t\t\t\tonClick={() => setCelcius(false)}\r\n\t\t\t\t>\r\n\t\t\t\t\t&#176;F\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<main>\r\n\t\t\t\t<ul className=\"daily\">{loaded ? <Days /> : \"\"}</ul>\r\n\t\t\t</main>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nfunction RenderMain() {\r\n\treturn (\r\n\t\t<section className=\"main\">\r\n\t\t\t<Main />\r\n\t\t</section>\r\n\t);\r\n}\r\n\r\nconst main = createRoot(document.querySelector(\"#main\"));\r\nmain.render(<RenderMain />);\r\n","/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/Sidebar.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":6,"column":10,"nodeType":"28","messageId":"29","endLine":6,"endColumn":17},{"ruleId":"30","severity":1,"message":"31","line":157,"column":5,"nodeType":"32","endLine":157,"endColumn":13,"suggestions":"33"},"no-use-before-define","'getData' was used before it was defined.","Identifier","usedBeforeDefined","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'imgs'. Either include it or remove the dependency array. You can also do a functional update 'setImgs(i => ...)' if you only need 'imgs' in the 'setImgs' call.","ArrayExpression",["34"],{"desc":"35","fix":"36"},"Update the dependencies array to be: [imgs, loaded]",{"range":"37","text":"38"},[4445,4453],"[imgs, loaded]"]