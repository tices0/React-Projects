[{"/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/index.js":"1","/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/App.js":"2","/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/index.js":"3","/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/Sidebar.js":"4"},{"size":442,"mtime":1673737540521,"results":"5","hashOfConfig":"6"},{"size":812,"mtime":1673815081086,"results":"7","hashOfConfig":"6"},{"size":4222,"mtime":1676221180260,"results":"8","hashOfConfig":"9"},{"size":6641,"mtime":1676218462669,"results":"10","hashOfConfig":"9"},{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fogi54",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ovq8xw",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/index.js",[],[],"/mnt/c/Users/User/VS Code/React practice/Counter/counter/src/App.js",[],[],"/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/index.js",["25"],[],"/mnt/c/Users/User/VS Code/React practice/Weather/weather/src/Sidebar.js",["26","27"],[],"import React, { useState, useEffect, useLayoutEffect, createRef } from \"react\";\r\nimport \"./styles/style.css\";\r\nimport { getData, weathercode, setGeo } from \"./index.js\";\r\n\r\nfunction Sidebar() {\r\n\tlet lon;\r\n\tlet lat;\r\n\r\n\tconst [code, setCode] = useState(\"\");\r\n\tconst [codeSet, setCodeSet] = useState(false);\r\n\r\n\tconst [temp, setTemp] = useState();\r\n\tconst [label, setLabel] = useState();\r\n\tconst [date, setDate] = useState();\r\n\tconst [location, setLocation] = useState();\r\n\r\n\tconst [isCurrent, setIsCurrent] = useState(true);\r\n\tconst [onSearch, setOnSearch] = useState(false);\r\n\r\n\tconst [newLat, setLat] = useState();\r\n\tconst [newLon, setLon] = useState();\r\n\r\n\tconst [recent, setRecent] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function setCurrent() {\r\n\t\t\tif (isCurrent) {\r\n\t\t\t\tconst both = await setGeo();\r\n\t\t\t\tlon = both[0];\r\n\t\t\t\tlat = both[1];\r\n\t\t\t} else {\r\n\t\t\t\tlon = newLon;\r\n\t\t\t\tlat = newLat;\r\n\t\t\t}\r\n\r\n\t\t\tlet data = await getData(lon, lat);\r\n\t\t\treturn setUp(data);\r\n\t\t}\r\n\r\n\t\tasync function setUp(data) {\r\n\t\t\tlet imgcode = weathercode(data);\r\n\t\t\tif (imgcode) {\r\n\t\t\t\tsetCode(imgcode);\r\n\t\t\t} else {\r\n\t\t\t\tsetCode(\"Clear\");\r\n\t\t\t}\r\n\t\t\tsetCodeSet(true);\r\n\r\n\t\t\tif (imgcode) {\r\n\t\t\t\tlet label = imgcode.replace(/([A-Z])/g, \" $1\").trim();\r\n\t\t\t\tif (imgcode.includes(\"Cloud\")) {\r\n\t\t\t\t\tlabel = \"Cloudy\";\r\n\t\t\t\t}\r\n\t\t\t\tsetLabel(label);\r\n\t\t\t} else {\r\n\t\t\t\tsetLabel(\"No Image\");\r\n\t\t\t}\r\n\r\n\t\t\tlet current_temp = data.current_weather.temperature;\r\n\t\t\tsetTemp(Math.round(current_temp));\r\n\r\n\t\t\tlet date = new Date(\r\n\t\t\t\tdata.current_weather.time.split(\"T\")[0],\r\n\t\t\t).toString(\"ddd, d MMM\");\r\n\t\t\tsetDate(date);\r\n\r\n\t\t\tlet location = await locationToCity(lon, lat);\r\n\t\t\tsetLocation(location);\r\n\t\t}\r\n\r\n\t\tsetCurrent();\r\n\t}, [code, temp, label, date, location, isCurrent, newLat, newLon]);\r\n\r\n\tconst [reverse, setReverse] = useState(true);\r\n\tconst [list, setList] = useState();\r\n\r\n\tconst RecentSearches = () => {\r\n\t\tuseEffect(() => {\r\n\t\t\tif (reverse) {\r\n\t\t\t\tsetList([...recent].reverse());\r\n\t\t\t\tsetReverse(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (list) {\r\n\t\t\t\tconst alreadySeen = {};\r\n\t\t\t\tlet duplicate;\r\n\t\t\t\tlist.forEach(str => {\r\n\t\t\t\t\talreadySeen[str]\r\n\t\t\t\t\t\t? (duplicate = str)\r\n\t\t\t\t\t\t: (alreadySeen[str] = true);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst index = list.indexOf(duplicate);\r\n\t\t\t\tlet item = list[index];\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tlet i = 0;\r\n\t\t\t\t\twhile (i < list.length) {\r\n\t\t\t\t\t\tif (list[i] === duplicate) {\r\n\t\t\t\t\t\t\tlist.splice(i, 1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t++i;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetRecent([...recent, item]);\r\n\t\t\t\t\tsetList([item].concat(list));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, []);\r\n\r\n\t\tlet searches;\r\n\r\n\t\tif (list) {\r\n\t\t\tsearches = list.map((value, index) => (\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tform=\"form\"\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tonClick={() => setSearch(value)}\r\n\t\t\t\t\tonMouseEnter={() => setSearch(value)}\r\n\t\t\t\t\tonMouseLeave={() => setSearch(\"\")}\r\n\t\t\t\t>\r\n\t\t\t\t\t{value}\r\n\t\t\t\t\t<i className=\"fa-solid fa-chevron-right\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t));\r\n\t\t} else {\r\n\t\t\tsearches = \"\";\r\n\t\t}\r\n\t\treturn searches;\r\n\t};\r\n\r\n\tconst [search, setSearch] = useState(\"\");\r\n\r\n\tconst handleSubmit = async event => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(\r\n\t\t\t\t`https://nominatim.openstreetmap.org/?addressdetails=1&q=${search}&format=json&limit=1`,\r\n\t\t\t);\r\n\t\t\tconst data = await res.json();\r\n\t\t\tsetOnSearch(false);\r\n\t\t\tsetIsCurrent(false);\r\n\r\n\t\t\tsetLat(parseFloat(data[0].lat));\r\n\t\t\tsetLon(parseFloat(data[0].lon));\r\n\r\n\t\t\tsetRecent([...recent, search]);\r\n\t\t\tsetReverse(true);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst InsideSection = () => {\r\n\t\tconst ulRef = createRef();\r\n\t\tuseLayoutEffect(() => {\r\n\t\t\tif (onSearch) {\r\n\t\t\t\tconst element = ulRef.current;\r\n\t\t\t\telement.style.height =\r\n\t\t\t\t\t\"calc(\" +\r\n\t\t\t\t\t(window.innerHeight - element.offsetTop) +\r\n\t\t\t\t\t\"px - 2rem - 0.5rem)\";\r\n\t\t\t}\r\n\t\t}, [ulRef]);\r\n\r\n\t\tif (onSearch) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className=\"search-container\">\r\n\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\tclassName=\"fa-solid fa-xmark fa-xl\"\r\n\t\t\t\t\t\t\tonClick={() => setOnSearch(false)}\r\n\t\t\t\t\t\t></i>\r\n\t\t\t\t\t\t<form id=\"form\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<div className=\"bar\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa-solid fa-magnifying-glass\"></i>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"search\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"search location\"\r\n\t\t\t\t\t\t\t\t\tonChange={event =>\r\n\t\t\t\t\t\t\t\t\t\tsetSearch(event.target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvalue={search}\r\n\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tvalue=\"Search\"\r\n\t\t\t\t\t\t\t\tclassName=\"submit\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t<ul ref={ulRef}>\r\n\t\t\t\t\t\t\t<RecentSearches />\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// else\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"top\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"places\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsetOnSearch(true);\r\n\t\t\t\t\t\t\tsetSearch(\"\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSearch for places\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"current\"\r\n\t\t\t\t\t\tonClick={() => setIsCurrent(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"fa-solid fa-location-crosshairs fa-xl\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"background\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={require(\"./media/Cloud-background.png\")}\r\n\t\t\t\t\t\talt=\"Cloud Background\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"image\">\r\n\t\t\t\t\t{codeSet ? (\r\n\t\t\t\t\t\t<img src={require(`./media/${code}.png`)} alt=\"\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\"\"\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"temp\">\r\n\t\t\t\t\t{codeSet ? <span>{temp}</span> : \"\"}\r\n\t\t\t\t\t<i>&#176;C</i>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"label\">\r\n\t\t\t\t\t{codeSet ? <span>{label}</span> : \"\"}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"date\">\r\n\t\t\t\t\t<span>Today</span> <i className=\"fa-solid fa-circle\"></i>\r\n\t\t\t\t\t{codeSet ? <span>{date}</span> : \"\"}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"location\">\r\n\t\t\t\t\t<i className=\"fa-solid fa-location-dot\"></i>\r\n\t\t\t\t\t{codeSet ? <span>{location}</span> : \"\"}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\treturn <InsideSection />;\r\n}\r\n\r\nasync function locationToCity(lon, lat) {\r\n\tconst res = await fetch(\r\n\t\t`https://nominatim.openstreetmap.org/reverse?format=geocodejson&lat=${lat}&lon=${lon}`,\r\n\t);\r\n\tconst data = await res.json();\r\n\r\n\tlet rtn;\r\n\tif (data.features[0].properties.geocoding.city) {\r\n\t\trtn = data.features[0].properties.geocoding.city;\r\n\t} else if (data.features[0].properties.geocoding.county) {\r\n\t\trtn = data.features[0].properties.geocoding.county;\r\n\t} else if (data.features[0].properties.geocoding.state) {\r\n\t\trtn = data.features[0].properties.geocoding.state;\r\n\t} else if (data.features[0].properties.geocoding.country) {\r\n\t\trtn = data.features[0].properties.geocoding.country;\r\n\t} else {\r\n\t\trtn = data.features[0].properties.geocoding.place;\r\n\t}\r\n\treturn rtn;\r\n}\r\n\r\nexport default Sidebar;\r\n",[],{"ruleId":"28","severity":1,"message":"29","line":6,"column":10,"nodeType":"30","messageId":"31","endLine":6,"endColumn":17},{"ruleId":"32","severity":1,"message":"33","line":29,"column":11,"nodeType":"34","endLine":29,"endColumn":18},{"ruleId":"32","severity":1,"message":"35","line":30,"column":11,"nodeType":"34","endLine":30,"endColumn":18},"no-use-before-define","'getData' was used before it was defined.","Identifier","usedBeforeDefined","react-hooks/exhaustive-deps","Assignments to the 'lon' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'lat' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect."]